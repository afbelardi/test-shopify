name: Lighthouse Performance Check

on:
  pull_request:
    branches:
      - main
    paths:
      - "assets/**"
      - "layout/**"
      - "sections/**"
      - "snippets/**"
      - "templates/**"
      - "config/**"
      - "**.js"
      - "**.css"
      - "**.liquid"
      - "**.json"

jobs:
  lighthouse-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme

      - name: Deploy preview theme and get preview_theme_id
        id: deploy_theme
        env:
          SHOPIFY_CLI_AUTH_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE_URL }}
          SHOPIFY_CLI_TUNNEL_URL: https://fake.localhost
          SHOPIFY_CLI_ENV: ci
        run: |
          echo "üîê Using Admin API token for store-level auth"
          OUTPUT=$(shopify theme push --unpublished --store $SHOPIFY_FLAG_STORE)
          echo "$OUTPUT"

          THEME_ID=$(echo "$OUTPUT" | grep -oE 'preview_theme_id=[0-9]+' | cut -d= -f2)
          echo "Extracted preview theme ID: $THEME_ID"
          echo "theme_id=$THEME_ID" >> $GITHUB_OUTPUT

      - name: Wait for deployment
        run: sleep 30

      - name: Run Lighthouse on live site (main branch)
        uses: treosh/lighthouse-ci-action@v10
        id: live
        with:
          urls: |
            https://${{ secrets.SHOPIFY_STORE_URL }}
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Run Lighthouse on PR preview theme
        uses: treosh/lighthouse-ci-action@v10
        id: preview
        with:
          urls: |
            https://${{ secrets.SHOPIFY_STORE_URL }}/?preview_theme_id=${{ steps.deploy_theme.outputs.theme_id }}
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Compare Lighthouse Scores
        id: compare
        run: |
          live_score=$(cat "${{ steps.live.outputs.manifest }}" | jq '.[] | select(.isRepresentativeRun == true) | .summary.performance')
          pr_score=$(cat "${{ steps.preview.outputs.manifest }}" | jq '.[] | select(.isRepresentativeRun == true) | .summary.performance')

          echo "Live score: $live_score"
          echo "PR score: $pr_score"

          score_diff=$(echo "$live_score - $pr_score" | bc)
          echo "Score difference: $score_diff"

          echo "live_score=$live_score" >> $GITHUB_OUTPUT
          echo "pr_score=$pr_score" >> $GITHUB_OUTPUT
          echo "score_diff=$score_diff" >> $GITHUB_OUTPUT

          if (( $(echo "$score_diff > 5" | bc -l) )); then
            echo "‚ö†Ô∏è Performance dropped by more than 5 points!"
            exit 1
          fi

      - name: Send Slack Notification (if performance dropped)
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "üö® Performance Drop Detected",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Performance drop detected in PR #${{ github.event.pull_request.number }}*\n\nLive score: ${{ steps.compare.outputs.live_score }}\nPR score: ${{ steps.compare.outputs.pr_score }}\nDiff: ${{ steps.compare.outputs.score_diff }}\n\n<${{ github.event.pull_request.html_url }}|View Pull Request>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
